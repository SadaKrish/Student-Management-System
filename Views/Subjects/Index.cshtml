@model IEnumerable<sms.Models.Subject>

@{
    ViewBag.Title = "Index";
}
<h2 class="text-center">Subject</h2>

<p class="align-content-end" id="button">

    <button onclick="LoadCreatePage()" class="btn bg-secondary text-light">Create New</button>
</p>
<table class="table" id="subject-list">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Sub_code)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Enable)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Sub_code)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Enable)
            </td>
            <td>
                <button onclick="LoadEditPage('@item.Sub_code')" class="btn">
                    <i class="bi bi-pencil edit-icon"></i>
                </button>
                <button class="btn" onclick="deleteSubject('@item.Sub_code')">
                    <i class="bi bi-trash delete-btn delete-btn" style="color: red;"></i>
                </button>
                <button onclick="LoadDetailsPage('@item.Sub_code')" class="btn">
                    <i class="bi bi-info-circle"></i>
                </button>

            </td>
        </tr>
    }

</table>
<div id="createnew">

</div>
<script>
    function LoadCreatePage() {
        //* /Hide student list and load create new form*/
        $("#subject-list").hide();

        $.ajax({
            type: "GET",
           url: "@Url.Action("Create", "Subjects")",

            data: {},
            cache: false,
            async: false,

            success: function (data) {
                $("#createnew").html(data)
            },
            error: function (xhr, ajaxOptions, thrownError) {
                aler('');
            }
        })

    }

    function LoadDetailsPage(studentId) {
        // Hide student list and button
        $("#subject-list").hide();
        $('#button').hide();

        $.ajax({
            type: "GET",
            url: "@Url.Action("SubjectDetails", "Subjects")",
            data: { id: studentId }, // Pass studentId as data
            cache: false,
            success: function (data) {
                // Load create new form with student details
                $("#createnew").html(data);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Error loading subject details.');
            }
        });
    }
    function LoadEditPage(studentId) {
        // Hide student list and button
        $("#subject-list").hide();
        $('#button').hide();

        $.ajax({
            type: "GET",
            url: "@Url.Action("Edit", "Subjects")",
            data: { id: studentId }, // Pass studentId as data
            cache: false,
            success: function (data) {
                // Load create new form with student details
                $("#createnew").html(data);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Error loading subjects details.');
            }
        });
}
    function deleteSubject(id) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '/Subjects/Delete/' + id, // Updated URL to use StudentsController
                    type: 'POST',

                    success: function (response) {

                        if (response.success) {
                            console.log("Delete");
                            // Remove the deleted student row from the UI
                            $('.delete-btn' + id).closest('tr').remove();
                            Swal.fire('Deleted!', 'Record deleted successfully.', 'success');
                        } else {
                            Swal.fire('Error!', response.message, 'error');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log(xhr);
                        console.log(status);
                        console.log(error);
                        Swal.fire('Error!', 'An error occurred while deleting the student.', 'error');
                    }
                });
            }
        });
    }



</script>