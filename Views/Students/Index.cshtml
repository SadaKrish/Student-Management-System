@model IEnumerable<sms.Models.Student>

@{
    ViewBag.Title = "Index";
}
<style>
    .btn {
        background-color: #cbf5ee;
        color:black;
    }
    
</style>
<h2 class="text-center">Student</h2>
<hr/>
<p class="align-content-end" id="button">

    <button onclick="LoadCreatePage()" class="btn text-dark">Add Student</button>
</p>
<!-- Student List Partial View -->
<div id="student-list">
    <table class="table">
        <tr>
            <th>@Html.DisplayNameFor(model => model.StdID)</th>
            <th>@Html.DisplayNameFor(model => model.FirstName)</th>
            <th>@Html.DisplayNameFor(model => model.LastName)</th>
            <th>@Html.DisplayNameFor(model => model.Gender)</th>
            <th>@Html.DisplayNameFor(model => model.DOB)</th>
            <th>@Html.DisplayNameFor(model => model.Address)</th>
            <th>@Html.DisplayNameFor(model => model.ContactNo)</th>
            <th>@Html.DisplayNameFor(model => model.Enable)</th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.StdID)</td>
                <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                <td>@Html.DisplayFor(modelItem => item.Gender)</td>
                <td>@Html.DisplayFor(modelItem => item.DOB)</td>
                <td>@Html.DisplayFor(modelItem => item.Address)</td>
                <td>@Html.DisplayFor(modelItem => item.ContactNo)</td>
                <td class="enable">@Html.DisplayFor(modelItem => item.Enable)</td>
                <td>
                    <button onclick="LoadEditPage('@item.StdID')" class="btn">
                        <i class="bi bi-pencil edit-icon"></i>
                    </button>
                    <button class="btn delete-btn" onclick="deleteStudent('@item.StdID')">
                        <i class="bi bi-trash" style="color: red;"></i>
                    </button>
                    <button onclick="LoadDetailsPage('@item.StdID')" class="btn">
                        <i class="bi bi-info-circle"></i>
                    </button>
                </td>
            </tr>
        }
    </table>
</div>

<button id="back-to-list" class="btn" onclick="LoadList()" style="display: none;">Back to List</button>
<div id="createnew">
    
</div>

<script>

    function LoadCreatePage() {
        //* /Hide student list and load create new form*/
        $("#student-list").hide();
        $('#button').hide();
        $('#back-to-list').show();
        $.ajax({
            type: "GET",
            url: "@Url.Action("Create", "Students")",

            data: {},
            cache: false,
            async: false,

            success: function (data) {
                $("#createnew").html(data)
            },
            error: function (xhr, ajaxOptions, thrownError) {
                aler('');
            }
        });
    }


    function LoadDetailsPage(studentId) {
    // Hide student list and button
    $("#student-list").hide();
    $("#button").hide();
    $("#createnew").show();
    $("#back-to-list").show(); // Show the "Back" button
    $.ajax({
        type: "GET",
        url: "@Url.Action("StudentDetails", "Students")",
        data: { studentId: studentId }, // Pass studentId as data
        cache: false,
        success: function (data) {
            // Load create new form with student details
            $("#createnew").html(data);
        },
        error: function (xhr, ajaxOptions, thrownError) {
            alert('Error loading student details.');
        }
    });
}

    function LoadEditPage(studentId) {
        // Hide student list and button
        $("#student-list").hide();
        $("#button").hide();
       // $("createnew").show();
        $("back-to-list").show();// Show the "Back" button
        $.ajax({
            type: "GET",
            url: "@Url.Action("Edit", "Students")",
            data: { id: studentId }, // Pass studentId as data
            cache: false,
            success: function (data) {
                // Load create new form with student details
                $("#createnew").html(data);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Error loading student details.');
            }
        });
    }

    function LoadList() {
        // Show student list and hide create new form
        $("#student-list").show();
        $('#button').show();
        $('#back-to-list').hide(); // Hide the "Back to List" button
        $("#createnew").empty(); // Empty the createnew div
    }

    function deleteStudent(id) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '@Url.Action("DeleteConfirmed", "Students")', // Use the DeleteConfirmed action
                    type: 'POST',
                    data: { id: id }, // Pass the id as data
                    success: function (response) {
                        console.log(id);
                        if (response.success) {
                            // Optionally, remove the deleted student row from the UI
                            // $('.delete-btn' + id).closest('tr').remove();
                            Swal.fire('Deleted!', 'Record deleted successfully.', 'success');
                            // Optionally, refresh the page or update UI as needed
                            location.reload(); // Reload the page
                        } else {
                            Swal.fire('Error!', response.message, 'error');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log(xhr);
                        console.log(status);
                        console.log(error);
                        Swal.fire('Error!', 'An error occurred while deleting the student.', 'error');
                    }
                });
            }
        });
    }
</script>
