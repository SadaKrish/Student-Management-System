@model IEnumerable<sms.Models.Teacher>

@{
    ViewBag.Title = "Index";
}
<style>
    .btn {
        background-color: #cbf5ee;
    }
    
</style>
<h2 class="text-center">Teacher</h2>
<hr/>
<p class="align-content-end" id="button">

    <button onclick="LoadCreatePage()" class="btn">Create New</button>
</p>
<!-- Student List Partial View -->
<div id="student-list">
    <table class="table">

        <tr>
            <th>
                @Html.DisplayNameFor(model => model.TeacherID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DOB)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ContactNo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Enable)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.TeacherID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DOB)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ContactNo)
                </td>
                <td class="enable">
                    @Html.DisplayFor(modelItem => item.Enable)
                </td>
                <td>
                    <button onclick="LoadEditPage('@item.TeacherID')" class="btn">
                        <i class="bi bi-pencil edit-icon"></i>
                    </button>
                    <button class="btn" onclick="deleteTeacher('@item.TeacherID')">
                        <i class="bi bi-trash delete-btn delete-btn" style="color: red;"></i>
                    </button>
                    <button onclick="LoadDetailsPage('@item.TeacherID')" class="btn">
                        <i class="bi bi-info-circle"></i>
                    </button>



                </td>
            </tr>
        }
    </table>
</div>


<!--Create form partial view-->
<button id="back-to-list" class="btn" onclick="LoadList()" style="display: none;">Back to List</button>
<div id="createnew">

</div>
<script>
    function LoadCreatePage() {
        //* /Hide student list and load create new form*/
        $("#student-list").hide();
        $('#button').hide();
        $('#back-to-list').show();
        $.ajax({
            type: "GET",
            url: "@Url.Action("Create", "Teachers")",

            data: {},
            cache: false,
            async: false,

            success: function (data) {
                $("#createnew").html(data)
            },
            error: function (xhr, ajaxOptions, thrownError) {
                aler('');
            }
        });

    }


    function LoadEditPage(studentId) {
        // Hide student list and button
        $("#student-list").hide();
        $('#button').hide();
        $('#back-to-list').show();
        $.ajax({
            type: "GET",
            url: "@Url.Action("Edit", "Teachers")",
            data: { id: studentId }, // Pass studentId as data
            cache: false,
            success: function (data) {
                // Load create new form with student details
                $("#createnew").html(data);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Error loading student details.');
            }
        });
    }


    function LoadDetailsPage(teacherId) {
        // Hide student list and button
        $("#student-list").hide();
        $("#button").hide();
        $("#createnew").show();
        $("#back-to-list").show(); // Show the "Back" button
        $.ajax({
            type: "GET",
            url: "@Url.Action("TeacherDetails", "Teachers")",
            data: { teacherId: teacherId }, // Pass studentId as data
            cache: false,
            success: function (data) {
                // Load create new form with student details
                $("#createnew").html(data);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Error loading student details.');
            }
        });

    }

    function LoadList() {
        // Show student list and hide create new form
        $("#student-list").show();
        $('#button').show();
        $('#back-to-list').hide(); // Hide the "Back to List" button
        $("#createnew").empty(); // Empty the createnew div
    }

         function deleteTeacher(id) {
         Swal.fire({
             title: 'Are you sure?',
             text: "You won't be able to revert this!",
             icon: 'warning',
             showCancelButton: true,
             confirmButtonColor: '#3085d6',
             cancelButtonColor: '#d33',
             confirmButtonText: 'Yes, delete it!'
         }).then((result) => {
             if (result.isConfirmed) {
                 $.ajax({
                     url: '/Teachers/DeleteConfirmed/' + id, // Updated URL to use StudentsController
                     type: 'POST',

                     success: function (response) {

                         if (response.success) {
                             console.log("Delete");
                             // Remove the deleted student row from the UI
                             $('.delete-btn' + id).closest('tr').remove();
                             Swal.fire('Deleted!', 'Record deleted successfully.', 'success');
                         } else {
                             Swal.fire('Error!', response.message, 'error');
                         }
                     },
                     error: function (xhr, status, error) {
                         console.log(xhr);
                         console.log(status);
                         console.log(error);
                         Swal.fire('Error!', 'An error occurred while deleting the student.', 'error');
                     }
                 });
         }
     });
 }


</script>

