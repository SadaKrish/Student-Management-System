@model List<sms.Models.sms_dbEntities>

@{
    ViewBag.Title = "Allocation";
}
<h2>Allocation</h2>
<hr />



<div class="panel container-fluid" id="allocatedSubjects">
    <h4>Allocated Subjects</h4>
    <div class="panel-heading">
        <p>
            <button id="addNewAllocation" class="btn btn-secondary text-light"> Add Subject Allocation</button>
        </p>
    </div>

    <div id="allocatedSubjectsList">
        <!--Allocated subjects will loaded here-->
    </div>
</div>

<!--Allocating the subject to teacher-->
<div id="assignSubjectForm" class="container-fluid" style="display:none">
    @Html.Partial("_AssignSubjectToTeacher")
</div>






<button id="backButton" class="btn btn-secondary m-4" style="display:none">Back</button>

@section Scripts{
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ajax-unobtrusive/3.2.6/jquery.unobtrusive-ajax.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>

    <script>

        $(document).ready(function () {

        //    $.ajax({
        //        url: '/Allocation/AllocatedStudents',
        //        type: 'GET',
        //        success: function (response) {
        //            $('#allocatedStudentsList').html(response);
        //            $('#allocatedStudents').show();
        //        },
        //        error: function () {
        //            alert('An error occurred while fetching allocated students.');
        //        }
        //    });


            //Allocation Details
            $.ajax({
                url: '/Allocation/AllocatedSubjects',
                type: 'GET',
                success: function (response) {
                    $('#allocatedSubjectsList').html(response);
                    $('#allocatedSubjects').show();
                },
                error: function () {
                    alert('An error occurred while fetching allocated subjects.');
                }
            });

            $('#addNewAllocation').click(function () {
                $('#assignSubjectForm').show();
                $('#backButton').show();
                $('#allocatedSubjects').hide();
                $('#allocatedStudents').hide();
            });

            $('#backButton').click(function () {
                $('#allocatedSubjects').show();
                $('#backButton').hide();
                $('#assignSubjectForm').hide();
                $('#studentAssignmentForm').hide();
                $('#allocatedStudents').show();

            });

            // Event listener for form submission
            $('#subjectAssignmentForm').submit(function (event) {
                event.preventDefault(); // Prevent default form submission behavior
                var teacherId = $('#teacherId').val();
                var subjectCode = $('#subjectCode').val();
                assignSubjectToTeacher(teacherId, subjectCode);
            });

            $(document).on('click', '.removeSubject', function () {
                var teacherId = $(this).data('teacher-id');
                var subjectCode = $(this).data('subject-code');
                removeSubjectFromTeacher(teacherId, subjectCode);
            });

            //Edit Subject
            $(document).on('click', '.editSubject', function () {
                var teacherId = $(this).data('teacher-id');
                var subjectCode = $(this).data('subject-code');
                checkSubjectAllocated(teacherId, subjectCode);
            });



            $('#studentAssignmentForm').submit(function (event) {
                event.preventDefault(); // Prevent default form submission behavior
                var studentId = $('#studentId').val();
                var subjectCode = $('#subjectCode2').val();
                var teacherId = $('#teacherId2').val();
                assignSubjectAndTeacherToStudent(studentId, subjectCode, teacherId);
            });

            $('#addNewStudentAllocation').click(function () {
                $('#studentAssignmentForm').show();
                $('#backButton').show();
                $('#allocatedStudents').hide();
                $('#allocatedSubjects').hide();
            });

            $(document).ready(function () {
                // Event listener for subject dropdown change
                $('#subjectCode2').change(function () {
                    var subjectCode = $(this).val();
                    loadTeachersForSubject(subjectCode);
                });

            });

            $(document).on('click', '.removeStudent', function () {
                var studentId = $(this).data('student-id');
                var subjectCode = $(this).data('subject-code');
                var teacherId = $(this).data('teacher-id');
                removeStudentAssignment(studentId, subjectCode, teacherId);
            });



        });


        function assignSubjectToTeacher(teacherId, subjectCode) {
            $.ajax({
                url: '/Allocation/AssignSubjectToTeacher',
                type: 'POST',
                data: { teacherId: teacherId, subjectCode: subjectCode },
                success: function (response) {
                    if (response.success) {
                        // Show success message using SweetAlert
                        Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: 'Subject assigned successfully!',
                            showCancelButton: false,
                            confirmButtonText: 'OK'
                        }).then((result) => {
                            if (result.isConfirmed) {

                                // After confirming, load updated allocated subjects
                                loadAllocatedSubjects();
                                $('#allocatedStudents').show();
                                $('#backButton').hide();
                                $("#assignSubjectForm").hide();
                            }
                        });
                    } else {
                        // Handle failure
                        alert(response.message);
                    }
                },
                error: function () {
                    // Handle error
                    Swal.fire('Error!', 'An error occurred while assigning the subject to the teacher.');
                }
            });
        }

        //Check Subject Alloaction
        function checkSubjectAllocated(teacherId, subjectCode) {
            $.ajax({
                url: '/Allocation/CheckSubjectAllocated',
                type: 'POST',
                data: { teacherId: teacherId, subjectCode: subjectCode },
                success: function (response) {
                    if (response.success) {
                        editSubjectAllocation(teacherId, subjectCode);
                    } else {
                        // Subject is allocated to students, show warning
                        Swal.fire({
                            icon: 'warning',
                            title: 'Warning!',
                            text: 'This subject is allocated to students. Editing is not allowed.',
                        });
                    }
                },
                error: function () {
                    // Handle error
                    Swal.fire('Error!', 'An error occurred while checking subject allocation.', 'error');
                }
            });
        }


        //Edit Subject Alloaction

        function editSubjectAllocation(teacherId, subjectCode) {
            $.ajax({
                url: '/Allocation/EditSubjectAllocation',
                type: 'POST',
                data: { teacherId: teacherId, subjectCode: subjectCode },
                success: function (response) {
                    if (response.success) {
                        $('#allocatedStudents').show();
                        $('#allocatedSubjects').show();
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: response.message,
                        });
                    }
                },
                error: function () {
                    // Handle error
                    Swal.fire('Error!', 'An error occurred while editing the subject allocation.', 'error');
                }
            });
        }




        function loadAllocatedSubjects() {
            $.ajax({
                url: '/Allocation/AllocatedSubjects',
                type: 'GET',
                success: function (response) {
                    $('#allocatedSubjectsList').html(response);
                    $('#allocatedSubjects').show();
                    $('#allocatedStudents').show();
                },
                error: function () {
                    alert('An error occurred while fetching allocated subjects.');
                }
            });
        }

        function loadAllocatedStudents() {
            $.ajax({
                url: '/Allocation/AllocatedStudents',
                type: 'GET',
                success: function (response) {
                    $('#allocatedStudentsList').html(response);
                    $('#allocatedStudents').show();
                    $('#allocatedSubjects').show();
                },
                error: function () {
                    alert('An error occurred while fetching allocated students.');
                }
            });
        }

        function assignSubjectAndTeacherToStudent(studentId, subjectCode, teacherId) {
            $.ajax({
                url: '/Allocation/AssignSubjectAndTeacherToStudent',
                type: 'POST',
                data: { studentId: studentId, subjectCode: subjectCode, teacherId: teacherId },
                success: function (response) {
                    if (response.success) {
                        // Show success message using SweetAlert
                        Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: 'Subject and teacher assigned successfully!',
                            showCancelButton: false,
                            confirmButtonText: 'OK'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                // After confirming, load updated allocated students
                                loadAllocatedStudents();
                                $('#backButton').hide();
                                $("#studentAssignmentForm").hide();
                            }
                        });
                    } else {
                        // Handle failure
                        alert(response.message);
                    }
                },
                error: function () {
                    // Handle error
                    Swal.fire('Error!', 'An error occurred while assigning the subject and teacher to the student.');
                }
            });
        }

        function loadTeachersForSubject(subjectCode) {
            $.ajax({
                url: '/Allocation/GetTeachersForSubject',
                type: 'POST',
                data: { subjectCode: subjectCode },
                success: function (response) {
                    $('#teacherId2').html(response);
                },
                error: function () {
                    alert('An error occurred while fetching teachers for the  subject.');
                }
            });
        }



        //Remove Student Allocation
        function removeStudentAssignment(studentId, subjectCode, teacherId) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'You are about to remove this student assignment. This action cannot be undone.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, remove it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Allocation/RemoveStudentAssignment',
                        type: 'POST',
                        data: {
                            studentId: studentId,
                            subjectCode: subjectCode,
                            teacherId: teacherId
                        },
                        success: function (response) {
                            if (response.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success!',
                                    text: 'Student assignment removed successfully!'
                                }).then(() => {
                                    loadAllocatedStudents();
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error!',
                                    text: response.message
                                });
                            }
                        },
                        error: function () {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error!',
                                text: 'An error occurred while removing the student assignment.'
                            });
                        }
                    });
                }
            });
        }


        function removeSubjectFromTeacher(teacherId, subjectCode) {
            // Display a confirmation dialog
            Swal.fire({
                title: 'Are you sure?',
                text: 'You are about to remove this subject assignment from the teacher. This action cannot be undone.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, remove it!',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    // If confirmed, make the AJAX request to remove the subject assignment
                    $.ajax({
                        url: '/Allocation/RemoveSubjectFromTeacher',
                        type: 'POST',
                        data: { teacherId: teacherId, subjectCode: subjectCode },
                        success: function (response) {
                            if (response.confirm) {
                                // If subject is assigned to students comes here
                                Swal.fire({
                                    title: 'Are you sure?',
                                    text: 'This subject is assigned to students. Do you want to remove all student assignments for this subject?',
                                    icon: 'warning',
                                    showCancelButton: true,
                                    confirmButtonColor: '#3085d6',
                                    cancelButtonColor: '#d33',
                                    confirmButtonText: 'Yes, remove all',
                                    cancelButtonText: 'No'
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        // If confirmed, remove all student assignments
                                        removeAllStudentAssignments(teacherId, subjectCode);
                                    }
                                });
                            } else {
                                // Subject not assigned to students, show success message
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success!',
                                    text: 'Subject assignment removed successfully!',
                                    showCancelButton: false,
                                    confirmButtonText: 'OK'
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        // After confirming, load updated allocated subjects
                                        loadAllocatedSubjects();
                                    }
                                });
                            }
                        },
                        error: function () {
                            // Handle error
                            Swal.fire('Error!', 'An error occurred while removing the subject assignment from the teacher.', 'error');
                        }
                    });
                }
            });
        }

        function removeAllStudentAssignments(teacherId, subjectCode) {
            // Make the AJAX request to remove all student assignments
            $.ajax({
                url: '/Allocation/RemoveAllStudentAssignments',
                type: 'POST',
                data: { teacherId: teacherId, subjectCode: subjectCode },
                success: function (response) {
                    // Show success message
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: 'All student assignments removed successfully!',
                        showCancelButton: false,
                        confirmButtonText: 'OK'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // After confirming, load updated allocated subjects
                            loadAllocatedSubjects();
                            loadAllocatedStudents();
                        }
                    });
                },
                error: function () {
                    Swal.fire('Error!', 'An error occurred while removing all student assignments for the subject.', 'error');
                }
            });
        }




    </script>
}